'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.3053
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<System.Data.Linq.Mapping.DatabaseAttribute(Name:="OrderProcess")>  _
Partial Public Class LiaDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InserttblConfirmedItem(instance As tblConfirmedItem)
    End Sub
  Partial Private Sub UpdatetblConfirmedItem(instance As tblConfirmedItem)
    End Sub
  Partial Private Sub DeletetblConfirmedItem(instance As tblConfirmedItem)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.OrderProcess1._0.My.MySettings.Default.OrderProcessConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property tblConfirmedItems() As System.Data.Linq.Table(Of tblConfirmedItem)
		Get
			Return Me.GetTable(Of tblConfirmedItem)
		End Get
	End Property
End Class

<Table(Name:="dbo.tblConfirmedItems")>  _
Partial Public Class tblConfirmedItem
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _iOrderableItemsID As Integer
	
	Private _iQuantityOrdered As Integer
	
	Private _sOrderer As String
	
	Private _sRecipientName As String
	
	Private _sCostCenterResponsible As String
	
	Private _sItManager As String
	
	Private _iAccountingUnitID As Integer
	
	Private _dDateConfirmed As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OniOrderableItemsIDChanging(value As Integer)
    End Sub
    Partial Private Sub OniOrderableItemsIDChanged()
    End Sub
    Partial Private Sub OniQuantityOrderedChanging(value As Integer)
    End Sub
    Partial Private Sub OniQuantityOrderedChanged()
    End Sub
    Partial Private Sub OnsOrdererChanging(value As String)
    End Sub
    Partial Private Sub OnsOrdererChanged()
    End Sub
    Partial Private Sub OnsRecipientNameChanging(value As String)
    End Sub
    Partial Private Sub OnsRecipientNameChanged()
    End Sub
    Partial Private Sub OnsCostCenterResponsibleChanging(value As String)
    End Sub
    Partial Private Sub OnsCostCenterResponsibleChanged()
    End Sub
    Partial Private Sub OnsItManagerChanging(value As String)
    End Sub
    Partial Private Sub OnsItManagerChanged()
    End Sub
    Partial Private Sub OniAccountingUnitIDChanging(value As Integer)
    End Sub
    Partial Private Sub OniAccountingUnitIDChanged()
    End Sub
    Partial Private Sub OndDateConfirmedChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OndDateConfirmedChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Column(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_iOrderableItemsID", DbType:="Int NOT NULL")>  _
	Public Property iOrderableItemsID() As Integer
		Get
			Return Me._iOrderableItemsID
		End Get
		Set
			If ((Me._iOrderableItemsID = value)  _
						= false) Then
				Me.OniOrderableItemsIDChanging(value)
				Me.SendPropertyChanging
				Me._iOrderableItemsID = value
				Me.SendPropertyChanged("iOrderableItemsID")
				Me.OniOrderableItemsIDChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_iQuantityOrdered", DbType:="Int NOT NULL")>  _
	Public Property iQuantityOrdered() As Integer
		Get
			Return Me._iQuantityOrdered
		End Get
		Set
			If ((Me._iQuantityOrdered = value)  _
						= false) Then
				Me.OniQuantityOrderedChanging(value)
				Me.SendPropertyChanging
				Me._iQuantityOrdered = value
				Me.SendPropertyChanged("iQuantityOrdered")
				Me.OniQuantityOrderedChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_sOrderer", DbType:="NVarChar(255)")>  _
	Public Property sOrderer() As String
		Get
			Return Me._sOrderer
		End Get
		Set
			If (String.Equals(Me._sOrderer, value) = false) Then
				Me.OnsOrdererChanging(value)
				Me.SendPropertyChanging
				Me._sOrderer = value
				Me.SendPropertyChanged("sOrderer")
				Me.OnsOrdererChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_sRecipientName", DbType:="NVarChar(255) NOT NULL", CanBeNull:=false)>  _
	Public Property sRecipientName() As String
		Get
			Return Me._sRecipientName
		End Get
		Set
			If (String.Equals(Me._sRecipientName, value) = false) Then
				Me.OnsRecipientNameChanging(value)
				Me.SendPropertyChanging
				Me._sRecipientName = value
				Me.SendPropertyChanged("sRecipientName")
				Me.OnsRecipientNameChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_sCostCenterResponsible", DbType:="NVarChar(255)")>  _
	Public Property sCostCenterResponsible() As String
		Get
			Return Me._sCostCenterResponsible
		End Get
		Set
			If (String.Equals(Me._sCostCenterResponsible, value) = false) Then
				Me.OnsCostCenterResponsibleChanging(value)
				Me.SendPropertyChanging
				Me._sCostCenterResponsible = value
				Me.SendPropertyChanged("sCostCenterResponsible")
				Me.OnsCostCenterResponsibleChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_sItManager", DbType:="NVarChar(255)")>  _
	Public Property sItManager() As String
		Get
			Return Me._sItManager
		End Get
		Set
			If (String.Equals(Me._sItManager, value) = false) Then
				Me.OnsItManagerChanging(value)
				Me.SendPropertyChanging
				Me._sItManager = value
				Me.SendPropertyChanged("sItManager")
				Me.OnsItManagerChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_iAccountingUnitID", DbType:="Int NOT NULL")>  _
	Public Property iAccountingUnitID() As Integer
		Get
			Return Me._iAccountingUnitID
		End Get
		Set
			If ((Me._iAccountingUnitID = value)  _
						= false) Then
				Me.OniAccountingUnitIDChanging(value)
				Me.SendPropertyChanging
				Me._iAccountingUnitID = value
				Me.SendPropertyChanged("iAccountingUnitID")
				Me.OniAccountingUnitIDChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_dDateConfirmed", DbType:="DateTime")>  _
	Public Property dDateConfirmed() As System.Nullable(Of Date)
		Get
			Return Me._dDateConfirmed
		End Get
		Set
			If (Me._dDateConfirmed.Equals(value) = false) Then
				Me.OndDateConfirmedChanging(value)
				Me.SendPropertyChanging
				Me._dDateConfirmed = value
				Me.SendPropertyChanged("dDateConfirmed")
				Me.OndDateConfirmedChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
