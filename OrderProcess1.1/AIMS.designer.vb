'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.235
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="inventarAIMS")>  _
Partial Public Class AIMSDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertGeraet_Benutzer(instance As Geraet_Benutzer)
    End Sub
  Partial Private Sub UpdateGeraet_Benutzer(instance As Geraet_Benutzer)
    End Sub
  Partial Private Sub DeleteGeraet_Benutzer(instance As Geraet_Benutzer)
    End Sub
  Partial Private Sub InsertZubehoer(instance As Zubehoer)
    End Sub
  Partial Private Sub UpdateZubehoer(instance As Zubehoer)
    End Sub
  Partial Private Sub DeleteZubehoer(instance As Zubehoer)
    End Sub
  Partial Private Sub InsertLANPrinter(instance As LANPrinter)
    End Sub
  Partial Private Sub UpdateLANPrinter(instance As LANPrinter)
    End Sub
  Partial Private Sub DeleteLANPrinter(instance As LANPrinter)
    End Sub
  Partial Private Sub InsertMobilData(instance As MobilData)
    End Sub
  Partial Private Sub UpdateMobilData(instance As MobilData)
    End Sub
  Partial Private Sub DeleteMobilData(instance As MobilData)
    End Sub
  Partial Private Sub InsertBenutzer(instance As Benutzer)
    End Sub
  Partial Private Sub UpdateBenutzer(instance As Benutzer)
    End Sub
  Partial Private Sub DeleteBenutzer(instance As Benutzer)
    End Sub
  Partial Private Sub InsertGeraet(instance As Geraet)
    End Sub
  Partial Private Sub UpdateGeraet(instance As Geraet)
    End Sub
  Partial Private Sub DeleteGeraet(instance As Geraet)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.OrderProcess1_1.My.MySettings.Default.inventarAIMSConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property LastCHNrs() As System.Data.Linq.Table(Of LastCHNr)
		Get
			Return Me.GetTable(Of LastCHNr)
		End Get
	End Property
	
	Public ReadOnly Property Geraet_Benutzers() As System.Data.Linq.Table(Of Geraet_Benutzer)
		Get
			Return Me.GetTable(Of Geraet_Benutzer)
		End Get
	End Property
	
	Public ReadOnly Property Zubehoers() As System.Data.Linq.Table(Of Zubehoer)
		Get
			Return Me.GetTable(Of Zubehoer)
		End Get
	End Property
	
	Public ReadOnly Property MaxNummers() As System.Data.Linq.Table(Of MaxNummer)
		Get
			Return Me.GetTable(Of MaxNummer)
		End Get
	End Property
	
	Public ReadOnly Property LANPrinters() As System.Data.Linq.Table(Of LANPrinter)
		Get
			Return Me.GetTable(Of LANPrinter)
		End Get
	End Property
	
	Public ReadOnly Property StdSystems() As System.Data.Linq.Table(Of StdSystem)
		Get
			Return Me.GetTable(Of StdSystem)
		End Get
	End Property
	
	Public ReadOnly Property Besitzers() As System.Data.Linq.Table(Of Besitzer)
		Get
			Return Me.GetTable(Of Besitzer)
		End Get
	End Property
	
	Public ReadOnly Property Kategories() As System.Data.Linq.Table(Of Kategorie)
		Get
			Return Me.GetTable(Of Kategorie)
		End Get
	End Property
	
	Public ReadOnly Property MobilDatas() As System.Data.Linq.Table(Of MobilData)
		Get
			Return Me.GetTable(Of MobilData)
		End Get
	End Property
	
	Public ReadOnly Property Benutzers() As System.Data.Linq.Table(Of Benutzer)
		Get
			Return Me.GetTable(Of Benutzer)
		End Get
	End Property
	
	Public ReadOnly Property Geraets() As System.Data.Linq.Table(Of Geraet)
		Get
			Return Me.GetTable(Of Geraet)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.LastCHNr")>  _
Partial Public Class LastCHNr
	
	Private _LastCHNr As Integer
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LastCHNr", DbType:="Int NOT NULL")>  _
	Public Property LastCHNr() As Integer
		Get
			Return Me._LastCHNr
		End Get
		Set
			If ((Me._LastCHNr = value)  _
						= false) Then
				Me._LastCHNr = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Geraet_Benutzer")>  _
Partial Public Class Geraet_Benutzer
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _CH_Nr As System.Nullable(Of Integer)
	
	Private _PersNr As Integer
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCH_NrChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCH_NrChanged()
    End Sub
    Partial Private Sub OnPersNrChanging(value As Integer)
    End Sub
    Partial Private Sub OnPersNrChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CH_Nr", DbType:="Int", IsPrimaryKey:=true)>  _
	Public Property CH_Nr() As System.Nullable(Of Integer)
		Get
			Return Me._CH_Nr
		End Get
		Set
			If (Me._CH_Nr.Equals(value) = false) Then
				Me.OnCH_NrChanging(value)
				Me.SendPropertyChanging
				Me._CH_Nr = value
				Me.SendPropertyChanged("CH_Nr")
				Me.OnCH_NrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PersNr", DbType:="Int NOT NULL")>  _
	Public Property PersNr() As Integer
		Get
			Return Me._PersNr
		End Get
		Set
			If ((Me._PersNr = value)  _
						= false) Then
				Me.OnPersNrChanging(value)
				Me.SendPropertyChanging
				Me._PersNr = value
				Me.SendPropertyChanged("PersNr")
				Me.OnPersNrChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Zubehoer")>  _
Partial Public Class Zubehoer
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Inv_Nr As String
	
	Private _ID As Integer
	
	Private _Geraet As String
	
	Private _Typ_Nr As String
	
	Private _Serie_Nr As String
	
	Private _Lieferant As String
	
	Private _Hersteller As String
	
	Private _Kauf_Date As System.Nullable(Of Date)
	
	Private _Kaufpreis As System.Nullable(Of Decimal)
	
	Private _Garantiezeit As System.Nullable(Of Short)
	
	Private _Garantietyp As String
	
	Private _Best_Nr As String
	
	Private _CH_Nr As System.Nullable(Of Integer)
	
	Private _Kategorie As String
	
	Private _Besitzer As String
	
	Private _BemerkungAllgemein As String
	
	Private _Status As System.Nullable(Of Integer)
	
	Private _Status_date As System.Nullable(Of Date)
	
	Private _Umsteller As String
	
	Private _LastUser As String
	
	Private _Lagerplatz As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnInv_NrChanging(value As String)
    End Sub
    Partial Private Sub OnInv_NrChanged()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnGeraetChanging(value As String)
    End Sub
    Partial Private Sub OnGeraetChanged()
    End Sub
    Partial Private Sub OnTyp_NrChanging(value As String)
    End Sub
    Partial Private Sub OnTyp_NrChanged()
    End Sub
    Partial Private Sub OnSerie_NrChanging(value As String)
    End Sub
    Partial Private Sub OnSerie_NrChanged()
    End Sub
    Partial Private Sub OnLieferantChanging(value As String)
    End Sub
    Partial Private Sub OnLieferantChanged()
    End Sub
    Partial Private Sub OnHerstellerChanging(value As String)
    End Sub
    Partial Private Sub OnHerstellerChanged()
    End Sub
    Partial Private Sub OnKauf_DateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnKauf_DateChanged()
    End Sub
    Partial Private Sub OnKaufpreisChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnKaufpreisChanged()
    End Sub
    Partial Private Sub OnGarantiezeitChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnGarantiezeitChanged()
    End Sub
    Partial Private Sub OnGarantietypChanging(value As String)
    End Sub
    Partial Private Sub OnGarantietypChanged()
    End Sub
    Partial Private Sub OnBest_NrChanging(value As String)
    End Sub
    Partial Private Sub OnBest_NrChanged()
    End Sub
    Partial Private Sub OnCH_NrChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCH_NrChanged()
    End Sub
    Partial Private Sub OnKategorieChanging(value As String)
    End Sub
    Partial Private Sub OnKategorieChanged()
    End Sub
    Partial Private Sub OnBesitzerChanging(value As String)
    End Sub
    Partial Private Sub OnBesitzerChanged()
    End Sub
    Partial Private Sub OnBemerkungAllgemeinChanging(value As String)
    End Sub
    Partial Private Sub OnBemerkungAllgemeinChanged()
    End Sub
    Partial Private Sub OnStatusChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnStatusChanged()
    End Sub
    Partial Private Sub OnStatus_dateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnStatus_dateChanged()
    End Sub
    Partial Private Sub OnUmstellerChanging(value As String)
    End Sub
    Partial Private Sub OnUmstellerChanged()
    End Sub
    Partial Private Sub OnLastUserChanging(value As String)
    End Sub
    Partial Private Sub OnLastUserChanged()
    End Sub
    Partial Private Sub OnLagerplatzChanging(value As String)
    End Sub
    Partial Private Sub OnLagerplatzChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Inv_Nr", DbType:="NVarChar(12)")>  _
	Public Property Inv_Nr() As String
		Get
			Return Me._Inv_Nr
		End Get
		Set
			If (String.Equals(Me._Inv_Nr, value) = false) Then
				Me.OnInv_NrChanging(value)
				Me.SendPropertyChanging
				Me._Inv_Nr = value
				Me.SendPropertyChanged("Inv_Nr")
				Me.OnInv_NrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Geraet", DbType:="NVarChar(50)")>  _
	Public Property Geraet() As String
		Get
			Return Me._Geraet
		End Get
		Set
			If (String.Equals(Me._Geraet, value) = false) Then
				Me.OnGeraetChanging(value)
				Me.SendPropertyChanging
				Me._Geraet = value
				Me.SendPropertyChanged("Geraet")
				Me.OnGeraetChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Typ_Nr", DbType:="NVarChar(50)")>  _
	Public Property Typ_Nr() As String
		Get
			Return Me._Typ_Nr
		End Get
		Set
			If (String.Equals(Me._Typ_Nr, value) = false) Then
				Me.OnTyp_NrChanging(value)
				Me.SendPropertyChanging
				Me._Typ_Nr = value
				Me.SendPropertyChanged("Typ_Nr")
				Me.OnTyp_NrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Serie_Nr", DbType:="NVarChar(20)")>  _
	Public Property Serie_Nr() As String
		Get
			Return Me._Serie_Nr
		End Get
		Set
			If (String.Equals(Me._Serie_Nr, value) = false) Then
				Me.OnSerie_NrChanging(value)
				Me.SendPropertyChanging
				Me._Serie_Nr = value
				Me.SendPropertyChanged("Serie_Nr")
				Me.OnSerie_NrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Lieferant", DbType:="NVarChar(50)")>  _
	Public Property Lieferant() As String
		Get
			Return Me._Lieferant
		End Get
		Set
			If (String.Equals(Me._Lieferant, value) = false) Then
				Me.OnLieferantChanging(value)
				Me.SendPropertyChanging
				Me._Lieferant = value
				Me.SendPropertyChanged("Lieferant")
				Me.OnLieferantChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Hersteller", DbType:="NVarChar(50)")>  _
	Public Property Hersteller() As String
		Get
			Return Me._Hersteller
		End Get
		Set
			If (String.Equals(Me._Hersteller, value) = false) Then
				Me.OnHerstellerChanging(value)
				Me.SendPropertyChanging
				Me._Hersteller = value
				Me.SendPropertyChanged("Hersteller")
				Me.OnHerstellerChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Kauf_Date", DbType:="DateTime")>  _
	Public Property Kauf_Date() As System.Nullable(Of Date)
		Get
			Return Me._Kauf_Date
		End Get
		Set
			If (Me._Kauf_Date.Equals(value) = false) Then
				Me.OnKauf_DateChanging(value)
				Me.SendPropertyChanging
				Me._Kauf_Date = value
				Me.SendPropertyChanged("Kauf_Date")
				Me.OnKauf_DateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Kaufpreis", DbType:="Money")>  _
	Public Property Kaufpreis() As System.Nullable(Of Decimal)
		Get
			Return Me._Kaufpreis
		End Get
		Set
			If (Me._Kaufpreis.Equals(value) = false) Then
				Me.OnKaufpreisChanging(value)
				Me.SendPropertyChanging
				Me._Kaufpreis = value
				Me.SendPropertyChanged("Kaufpreis")
				Me.OnKaufpreisChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Garantiezeit", DbType:="SmallInt")>  _
	Public Property Garantiezeit() As System.Nullable(Of Short)
		Get
			Return Me._Garantiezeit
		End Get
		Set
			If (Me._Garantiezeit.Equals(value) = false) Then
				Me.OnGarantiezeitChanging(value)
				Me.SendPropertyChanging
				Me._Garantiezeit = value
				Me.SendPropertyChanged("Garantiezeit")
				Me.OnGarantiezeitChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Garantietyp", DbType:="NVarChar(15)")>  _
	Public Property Garantietyp() As String
		Get
			Return Me._Garantietyp
		End Get
		Set
			If (String.Equals(Me._Garantietyp, value) = false) Then
				Me.OnGarantietypChanging(value)
				Me.SendPropertyChanging
				Me._Garantietyp = value
				Me.SendPropertyChanged("Garantietyp")
				Me.OnGarantietypChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Best_Nr", DbType:="NVarChar(30)")>  _
	Public Property Best_Nr() As String
		Get
			Return Me._Best_Nr
		End Get
		Set
			If (String.Equals(Me._Best_Nr, value) = false) Then
				Me.OnBest_NrChanging(value)
				Me.SendPropertyChanging
				Me._Best_Nr = value
				Me.SendPropertyChanged("Best_Nr")
				Me.OnBest_NrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CH_Nr", DbType:="Int")>  _
	Public Property CH_Nr() As System.Nullable(Of Integer)
		Get
			Return Me._CH_Nr
		End Get
		Set
			If (Me._CH_Nr.Equals(value) = false) Then
				Me.OnCH_NrChanging(value)
				Me.SendPropertyChanging
				Me._CH_Nr = value
				Me.SendPropertyChanged("CH_Nr")
				Me.OnCH_NrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Kategorie", DbType:="NVarChar(20)")>  _
	Public Property Kategorie() As String
		Get
			Return Me._Kategorie
		End Get
		Set
			If (String.Equals(Me._Kategorie, value) = false) Then
				Me.OnKategorieChanging(value)
				Me.SendPropertyChanging
				Me._Kategorie = value
				Me.SendPropertyChanged("Kategorie")
				Me.OnKategorieChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Besitzer", DbType:="NVarChar(50)")>  _
	Public Property Besitzer() As String
		Get
			Return Me._Besitzer
		End Get
		Set
			If (String.Equals(Me._Besitzer, value) = false) Then
				Me.OnBesitzerChanging(value)
				Me.SendPropertyChanging
				Me._Besitzer = value
				Me.SendPropertyChanged("Besitzer")
				Me.OnBesitzerChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BemerkungAllgemein", DbType:="NVarChar(80)")>  _
	Public Property BemerkungAllgemein() As String
		Get
			Return Me._BemerkungAllgemein
		End Get
		Set
			If (String.Equals(Me._BemerkungAllgemein, value) = false) Then
				Me.OnBemerkungAllgemeinChanging(value)
				Me.SendPropertyChanging
				Me._BemerkungAllgemein = value
				Me.SendPropertyChanged("BemerkungAllgemein")
				Me.OnBemerkungAllgemeinChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Status", DbType:="Int")>  _
	Public Property Status() As System.Nullable(Of Integer)
		Get
			Return Me._Status
		End Get
		Set
			If (Me._Status.Equals(value) = false) Then
				Me.OnStatusChanging(value)
				Me.SendPropertyChanging
				Me._Status = value
				Me.SendPropertyChanged("Status")
				Me.OnStatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Status_date", DbType:="DateTime")>  _
	Public Property Status_date() As System.Nullable(Of Date)
		Get
			Return Me._Status_date
		End Get
		Set
			If (Me._Status_date.Equals(value) = false) Then
				Me.OnStatus_dateChanging(value)
				Me.SendPropertyChanging
				Me._Status_date = value
				Me.SendPropertyChanged("Status_date")
				Me.OnStatus_dateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Umsteller", DbType:="NVarChar(50)")>  _
	Public Property Umsteller() As String
		Get
			Return Me._Umsteller
		End Get
		Set
			If (String.Equals(Me._Umsteller, value) = false) Then
				Me.OnUmstellerChanging(value)
				Me.SendPropertyChanging
				Me._Umsteller = value
				Me.SendPropertyChanged("Umsteller")
				Me.OnUmstellerChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LastUser", DbType:="NVarChar(50)")>  _
	Public Property LastUser() As String
		Get
			Return Me._LastUser
		End Get
		Set
			If (String.Equals(Me._LastUser, value) = false) Then
				Me.OnLastUserChanging(value)
				Me.SendPropertyChanging
				Me._LastUser = value
				Me.SendPropertyChanged("LastUser")
				Me.OnLastUserChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Lagerplatz", DbType:="NVarChar(50)")>  _
	Public Property Lagerplatz() As String
		Get
			Return Me._Lagerplatz
		End Get
		Set
			If (String.Equals(Me._Lagerplatz, value) = false) Then
				Me.OnLagerplatzChanging(value)
				Me.SendPropertyChanging
				Me._Lagerplatz = value
				Me.SendPropertyChanged("Lagerplatz")
				Me.OnLagerplatzChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MaxNummer")>  _
Partial Public Class MaxNummer
	
	Private _NeuNummer As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NeuNummer", DbType:="NVarChar(8)")>  _
	Public Property NeuNummer() As String
		Get
			Return Me._NeuNummer
		End Get
		Set
			If (String.Equals(Me._NeuNummer, value) = false) Then
				Me._NeuNummer = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.LAN_Printer")>  _
Partial Public Class LANPrinter
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _Inv_Nr As String
	
	Private _PrinterName As String
	
	Private _Ort As String
	
	Private _Hersteller As String
	
	Private _Typ As String
	
	Private _Serie_Nr As String
	
	Private _Comment As String
	
	Private _Best_Nr As String
	
	Private _Lieferant As String
	
	Private _Kauf_Date As System.Nullable(Of Date)
	
	Private _Besitzer As String
	
	Private _RAM As System.Nullable(Of Short)
	
	Private _NW_Interface As String
	
	Private _NW_Port As String
	
	Private _SAP_Adr As String
	
	Private _NT_Foreignport As String
	
	Private _Printserver As String
	
	Private _Verantwortlich As String
	
	Private _dpi As String
	
	Private _Farbe As System.Nullable(Of Boolean)
	
	Private _Duplex As System.Nullable(Of Boolean)
	
	Private _Optionen As String
	
	Private _Umsteller As String
	
	Private _Status_date As System.Nullable(Of Date)
	
	Private _Status As System.Nullable(Of Short)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnInv_NrChanging(value As String)
    End Sub
    Partial Private Sub OnInv_NrChanged()
    End Sub
    Partial Private Sub OnPrinterNameChanging(value As String)
    End Sub
    Partial Private Sub OnPrinterNameChanged()
    End Sub
    Partial Private Sub OnOrtChanging(value As String)
    End Sub
    Partial Private Sub OnOrtChanged()
    End Sub
    Partial Private Sub OnHerstellerChanging(value As String)
    End Sub
    Partial Private Sub OnHerstellerChanged()
    End Sub
    Partial Private Sub OnTypChanging(value As String)
    End Sub
    Partial Private Sub OnTypChanged()
    End Sub
    Partial Private Sub OnSerie_NrChanging(value As String)
    End Sub
    Partial Private Sub OnSerie_NrChanged()
    End Sub
    Partial Private Sub OnCommentChanging(value As String)
    End Sub
    Partial Private Sub OnCommentChanged()
    End Sub
    Partial Private Sub OnBest_NrChanging(value As String)
    End Sub
    Partial Private Sub OnBest_NrChanged()
    End Sub
    Partial Private Sub OnLieferantChanging(value As String)
    End Sub
    Partial Private Sub OnLieferantChanged()
    End Sub
    Partial Private Sub OnKauf_DateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnKauf_DateChanged()
    End Sub
    Partial Private Sub OnBesitzerChanging(value As String)
    End Sub
    Partial Private Sub OnBesitzerChanged()
    End Sub
    Partial Private Sub OnRAMChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnRAMChanged()
    End Sub
    Partial Private Sub OnNW_InterfaceChanging(value As String)
    End Sub
    Partial Private Sub OnNW_InterfaceChanged()
    End Sub
    Partial Private Sub OnNW_PortChanging(value As String)
    End Sub
    Partial Private Sub OnNW_PortChanged()
    End Sub
    Partial Private Sub OnSAP_AdrChanging(value As String)
    End Sub
    Partial Private Sub OnSAP_AdrChanged()
    End Sub
    Partial Private Sub OnNT_ForeignportChanging(value As String)
    End Sub
    Partial Private Sub OnNT_ForeignportChanged()
    End Sub
    Partial Private Sub OnPrintserverChanging(value As String)
    End Sub
    Partial Private Sub OnPrintserverChanged()
    End Sub
    Partial Private Sub OnVerantwortlichChanging(value As String)
    End Sub
    Partial Private Sub OnVerantwortlichChanged()
    End Sub
    Partial Private Sub OndpiChanging(value As String)
    End Sub
    Partial Private Sub OndpiChanged()
    End Sub
    Partial Private Sub OnFarbeChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnFarbeChanged()
    End Sub
    Partial Private Sub OnDuplexChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnDuplexChanged()
    End Sub
    Partial Private Sub OnOptionenChanging(value As String)
    End Sub
    Partial Private Sub OnOptionenChanged()
    End Sub
    Partial Private Sub OnUmstellerChanging(value As String)
    End Sub
    Partial Private Sub OnUmstellerChanged()
    End Sub
    Partial Private Sub OnStatus_dateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnStatus_dateChanged()
    End Sub
    Partial Private Sub OnStatusChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnStatusChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Inv_Nr", DbType:="NVarChar(8)")>  _
	Public Property Inv_Nr() As String
		Get
			Return Me._Inv_Nr
		End Get
		Set
			If (String.Equals(Me._Inv_Nr, value) = false) Then
				Me.OnInv_NrChanging(value)
				Me.SendPropertyChanging
				Me._Inv_Nr = value
				Me.SendPropertyChanged("Inv_Nr")
				Me.OnInv_NrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PrinterName", DbType:="NVarChar(15)")>  _
	Public Property PrinterName() As String
		Get
			Return Me._PrinterName
		End Get
		Set
			If (String.Equals(Me._PrinterName, value) = false) Then
				Me.OnPrinterNameChanging(value)
				Me.SendPropertyChanging
				Me._PrinterName = value
				Me.SendPropertyChanged("PrinterName")
				Me.OnPrinterNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Ort", DbType:="NVarChar(30)")>  _
	Public Property Ort() As String
		Get
			Return Me._Ort
		End Get
		Set
			If (String.Equals(Me._Ort, value) = false) Then
				Me.OnOrtChanging(value)
				Me.SendPropertyChanging
				Me._Ort = value
				Me.SendPropertyChanged("Ort")
				Me.OnOrtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Hersteller", DbType:="NVarChar(50)")>  _
	Public Property Hersteller() As String
		Get
			Return Me._Hersteller
		End Get
		Set
			If (String.Equals(Me._Hersteller, value) = false) Then
				Me.OnHerstellerChanging(value)
				Me.SendPropertyChanging
				Me._Hersteller = value
				Me.SendPropertyChanged("Hersteller")
				Me.OnHerstellerChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Typ", DbType:="NVarChar(50)")>  _
	Public Property Typ() As String
		Get
			Return Me._Typ
		End Get
		Set
			If (String.Equals(Me._Typ, value) = false) Then
				Me.OnTypChanging(value)
				Me.SendPropertyChanging
				Me._Typ = value
				Me.SendPropertyChanged("Typ")
				Me.OnTypChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Serie_Nr", DbType:="NVarChar(15)")>  _
	Public Property Serie_Nr() As String
		Get
			Return Me._Serie_Nr
		End Get
		Set
			If (String.Equals(Me._Serie_Nr, value) = false) Then
				Me.OnSerie_NrChanging(value)
				Me.SendPropertyChanging
				Me._Serie_Nr = value
				Me.SendPropertyChanged("Serie_Nr")
				Me.OnSerie_NrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Comment", DbType:="NVarChar(255)")>  _
	Public Property Comment() As String
		Get
			Return Me._Comment
		End Get
		Set
			If (String.Equals(Me._Comment, value) = false) Then
				Me.OnCommentChanging(value)
				Me.SendPropertyChanging
				Me._Comment = value
				Me.SendPropertyChanged("Comment")
				Me.OnCommentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Best_Nr", DbType:="NVarChar(10)")>  _
	Public Property Best_Nr() As String
		Get
			Return Me._Best_Nr
		End Get
		Set
			If (String.Equals(Me._Best_Nr, value) = false) Then
				Me.OnBest_NrChanging(value)
				Me.SendPropertyChanging
				Me._Best_Nr = value
				Me.SendPropertyChanged("Best_Nr")
				Me.OnBest_NrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Lieferant", DbType:="NVarChar(50)")>  _
	Public Property Lieferant() As String
		Get
			Return Me._Lieferant
		End Get
		Set
			If (String.Equals(Me._Lieferant, value) = false) Then
				Me.OnLieferantChanging(value)
				Me.SendPropertyChanging
				Me._Lieferant = value
				Me.SendPropertyChanged("Lieferant")
				Me.OnLieferantChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Kauf_Date", DbType:="DateTime")>  _
	Public Property Kauf_Date() As System.Nullable(Of Date)
		Get
			Return Me._Kauf_Date
		End Get
		Set
			If (Me._Kauf_Date.Equals(value) = false) Then
				Me.OnKauf_DateChanging(value)
				Me.SendPropertyChanging
				Me._Kauf_Date = value
				Me.SendPropertyChanged("Kauf_Date")
				Me.OnKauf_DateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Besitzer", DbType:="NVarChar(50)")>  _
	Public Property Besitzer() As String
		Get
			Return Me._Besitzer
		End Get
		Set
			If (String.Equals(Me._Besitzer, value) = false) Then
				Me.OnBesitzerChanging(value)
				Me.SendPropertyChanging
				Me._Besitzer = value
				Me.SendPropertyChanged("Besitzer")
				Me.OnBesitzerChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RAM", DbType:="SmallInt")>  _
	Public Property RAM() As System.Nullable(Of Short)
		Get
			Return Me._RAM
		End Get
		Set
			If (Me._RAM.Equals(value) = false) Then
				Me.OnRAMChanging(value)
				Me.SendPropertyChanging
				Me._RAM = value
				Me.SendPropertyChanged("RAM")
				Me.OnRAMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NW_Interface", DbType:="NVarChar(30)")>  _
	Public Property NW_Interface() As String
		Get
			Return Me._NW_Interface
		End Get
		Set
			If (String.Equals(Me._NW_Interface, value) = false) Then
				Me.OnNW_InterfaceChanging(value)
				Me.SendPropertyChanging
				Me._NW_Interface = value
				Me.SendPropertyChanged("NW_Interface")
				Me.OnNW_InterfaceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NW_Port", DbType:="NVarChar(15)")>  _
	Public Property NW_Port() As String
		Get
			Return Me._NW_Port
		End Get
		Set
			If (String.Equals(Me._NW_Port, value) = false) Then
				Me.OnNW_PortChanging(value)
				Me.SendPropertyChanging
				Me._NW_Port = value
				Me.SendPropertyChanged("NW_Port")
				Me.OnNW_PortChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SAP_Adr", DbType:="NVarChar(15)")>  _
	Public Property SAP_Adr() As String
		Get
			Return Me._SAP_Adr
		End Get
		Set
			If (String.Equals(Me._SAP_Adr, value) = false) Then
				Me.OnSAP_AdrChanging(value)
				Me.SendPropertyChanging
				Me._SAP_Adr = value
				Me.SendPropertyChanged("SAP_Adr")
				Me.OnSAP_AdrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NT_Foreignport", DbType:="NVarChar(15)")>  _
	Public Property NT_Foreignport() As String
		Get
			Return Me._NT_Foreignport
		End Get
		Set
			If (String.Equals(Me._NT_Foreignport, value) = false) Then
				Me.OnNT_ForeignportChanging(value)
				Me.SendPropertyChanging
				Me._NT_Foreignport = value
				Me.SendPropertyChanged("NT_Foreignport")
				Me.OnNT_ForeignportChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Printserver", DbType:="NVarChar(10)")>  _
	Public Property Printserver() As String
		Get
			Return Me._Printserver
		End Get
		Set
			If (String.Equals(Me._Printserver, value) = false) Then
				Me.OnPrintserverChanging(value)
				Me.SendPropertyChanging
				Me._Printserver = value
				Me.SendPropertyChanged("Printserver")
				Me.OnPrintserverChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Verantwortlich", DbType:="NVarChar(50)")>  _
	Public Property Verantwortlich() As String
		Get
			Return Me._Verantwortlich
		End Get
		Set
			If (String.Equals(Me._Verantwortlich, value) = false) Then
				Me.OnVerantwortlichChanging(value)
				Me.SendPropertyChanging
				Me._Verantwortlich = value
				Me.SendPropertyChanged("Verantwortlich")
				Me.OnVerantwortlichChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dpi", DbType:="NVarChar(15)")>  _
	Public Property dpi() As String
		Get
			Return Me._dpi
		End Get
		Set
			If (String.Equals(Me._dpi, value) = false) Then
				Me.OndpiChanging(value)
				Me.SendPropertyChanging
				Me._dpi = value
				Me.SendPropertyChanged("dpi")
				Me.OndpiChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Farbe", DbType:="Bit")>  _
	Public Property Farbe() As System.Nullable(Of Boolean)
		Get
			Return Me._Farbe
		End Get
		Set
			If (Me._Farbe.Equals(value) = false) Then
				Me.OnFarbeChanging(value)
				Me.SendPropertyChanging
				Me._Farbe = value
				Me.SendPropertyChanged("Farbe")
				Me.OnFarbeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Duplex", DbType:="Bit")>  _
	Public Property Duplex() As System.Nullable(Of Boolean)
		Get
			Return Me._Duplex
		End Get
		Set
			If (Me._Duplex.Equals(value) = false) Then
				Me.OnDuplexChanging(value)
				Me.SendPropertyChanging
				Me._Duplex = value
				Me.SendPropertyChanged("Duplex")
				Me.OnDuplexChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Optionen", DbType:="NVarChar(50)")>  _
	Public Property Optionen() As String
		Get
			Return Me._Optionen
		End Get
		Set
			If (String.Equals(Me._Optionen, value) = false) Then
				Me.OnOptionenChanging(value)
				Me.SendPropertyChanging
				Me._Optionen = value
				Me.SendPropertyChanged("Optionen")
				Me.OnOptionenChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Umsteller", DbType:="NVarChar(20)")>  _
	Public Property Umsteller() As String
		Get
			Return Me._Umsteller
		End Get
		Set
			If (String.Equals(Me._Umsteller, value) = false) Then
				Me.OnUmstellerChanging(value)
				Me.SendPropertyChanging
				Me._Umsteller = value
				Me.SendPropertyChanged("Umsteller")
				Me.OnUmstellerChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Status_date", DbType:="DateTime")>  _
	Public Property Status_date() As System.Nullable(Of Date)
		Get
			Return Me._Status_date
		End Get
		Set
			If (Me._Status_date.Equals(value) = false) Then
				Me.OnStatus_dateChanging(value)
				Me.SendPropertyChanging
				Me._Status_date = value
				Me.SendPropertyChanged("Status_date")
				Me.OnStatus_dateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Status", DbType:="SmallInt")>  _
	Public Property Status() As System.Nullable(Of Short)
		Get
			Return Me._Status
		End Get
		Set
			If (Me._Status.Equals(value) = false) Then
				Me.OnStatusChanging(value)
				Me.SendPropertyChanging
				Me._Status = value
				Me.SendPropertyChanged("Status")
				Me.OnStatusChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Std_Systems")>  _
Partial Public Class StdSystem
	
	Private _ID As Integer
	
	Private _Geraet As String
	
	Private _Typ As System.Nullable(Of Char)
	
	Private _Kategorie As String
	
	Private _Typ_Nr As String
	
	Private _Hersteller As String
	
	Private _Garantiezeit As System.Nullable(Of Short)
	
	Private _Garantietyp As String
	
	Private _CPU_Typ As String
	
	Private _CPU_Frequenz As String
	
	Private _Memory As String
	
	Private _HD_Disk As String
	
	Private _Graphikkarte As String
	
	Private _Soundkarte As String
	
	Private _Netzkarte As String
	
	Private _Betriebssystem As System.Nullable(Of Integer)
	
	Private _Resolution As String
	
	Private _Status As System.Nullable(Of Short)
	
	Private _Status_date As System.Nullable(Of Date)
	
	Private _Umsteller As String
	
	Private _adminwkst As System.Nullable(Of Boolean)
	
	Private _assettag As String
	
	Private _dpi As System.Nullable(Of Integer)
	
	Private _farbe As System.Nullable(Of Boolean)
	
	Private _optionen As String
	
	Private _duplex As System.Nullable(Of Boolean)
	
	Private _comment As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.Always, DbType:="Int NOT NULL IDENTITY", IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me._ID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Geraet", DbType:="NVarChar(40)")>  _
	Public Property Geraet() As String
		Get
			Return Me._Geraet
		End Get
		Set
			If (String.Equals(Me._Geraet, value) = false) Then
				Me._Geraet = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Typ", DbType:="NVarChar(1)")>  _
	Public Property Typ() As System.Nullable(Of Char)
		Get
			Return Me._Typ
		End Get
		Set
			If (Me._Typ.Equals(value) = false) Then
				Me._Typ = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Kategorie", DbType:="NVarChar(20)")>  _
	Public Property Kategorie() As String
		Get
			Return Me._Kategorie
		End Get
		Set
			If (String.Equals(Me._Kategorie, value) = false) Then
				Me._Kategorie = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Typ_Nr", DbType:="NVarChar(20)")>  _
	Public Property Typ_Nr() As String
		Get
			Return Me._Typ_Nr
		End Get
		Set
			If (String.Equals(Me._Typ_Nr, value) = false) Then
				Me._Typ_Nr = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Hersteller", DbType:="NVarChar(50)")>  _
	Public Property Hersteller() As String
		Get
			Return Me._Hersteller
		End Get
		Set
			If (String.Equals(Me._Hersteller, value) = false) Then
				Me._Hersteller = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Garantiezeit", DbType:="SmallInt")>  _
	Public Property Garantiezeit() As System.Nullable(Of Short)
		Get
			Return Me._Garantiezeit
		End Get
		Set
			If (Me._Garantiezeit.Equals(value) = false) Then
				Me._Garantiezeit = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Garantietyp", DbType:="NVarChar(15)")>  _
	Public Property Garantietyp() As String
		Get
			Return Me._Garantietyp
		End Get
		Set
			If (String.Equals(Me._Garantietyp, value) = false) Then
				Me._Garantietyp = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CPU_Typ", DbType:="NVarChar(20)")>  _
	Public Property CPU_Typ() As String
		Get
			Return Me._CPU_Typ
		End Get
		Set
			If (String.Equals(Me._CPU_Typ, value) = false) Then
				Me._CPU_Typ = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CPU_Frequenz", DbType:="NVarChar(4)")>  _
	Public Property CPU_Frequenz() As String
		Get
			Return Me._CPU_Frequenz
		End Get
		Set
			If (String.Equals(Me._CPU_Frequenz, value) = false) Then
				Me._CPU_Frequenz = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Memory", DbType:="NVarChar(4)")>  _
	Public Property Memory() As String
		Get
			Return Me._Memory
		End Get
		Set
			If (String.Equals(Me._Memory, value) = false) Then
				Me._Memory = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HD_Disk", DbType:="NVarChar(4)")>  _
	Public Property HD_Disk() As String
		Get
			Return Me._HD_Disk
		End Get
		Set
			If (String.Equals(Me._HD_Disk, value) = false) Then
				Me._HD_Disk = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Graphikkarte", DbType:="NVarChar(50)")>  _
	Public Property Graphikkarte() As String
		Get
			Return Me._Graphikkarte
		End Get
		Set
			If (String.Equals(Me._Graphikkarte, value) = false) Then
				Me._Graphikkarte = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Soundkarte", DbType:="NVarChar(50)")>  _
	Public Property Soundkarte() As String
		Get
			Return Me._Soundkarte
		End Get
		Set
			If (String.Equals(Me._Soundkarte, value) = false) Then
				Me._Soundkarte = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Netzkarte", DbType:="NVarChar(80)")>  _
	Public Property Netzkarte() As String
		Get
			Return Me._Netzkarte
		End Get
		Set
			If (String.Equals(Me._Netzkarte, value) = false) Then
				Me._Netzkarte = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Betriebssystem", DbType:="Int")>  _
	Public Property Betriebssystem() As System.Nullable(Of Integer)
		Get
			Return Me._Betriebssystem
		End Get
		Set
			If (Me._Betriebssystem.Equals(value) = false) Then
				Me._Betriebssystem = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Resolution", DbType:="NVarChar(20)")>  _
	Public Property Resolution() As String
		Get
			Return Me._Resolution
		End Get
		Set
			If (String.Equals(Me._Resolution, value) = false) Then
				Me._Resolution = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Status", DbType:="SmallInt")>  _
	Public Property Status() As System.Nullable(Of Short)
		Get
			Return Me._Status
		End Get
		Set
			If (Me._Status.Equals(value) = false) Then
				Me._Status = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Status_date", DbType:="DateTime")>  _
	Public Property Status_date() As System.Nullable(Of Date)
		Get
			Return Me._Status_date
		End Get
		Set
			If (Me._Status_date.Equals(value) = false) Then
				Me._Status_date = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Umsteller", DbType:="NVarChar(50)")>  _
	Public Property Umsteller() As String
		Get
			Return Me._Umsteller
		End Get
		Set
			If (String.Equals(Me._Umsteller, value) = false) Then
				Me._Umsteller = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_adminwkst", DbType:="Bit")>  _
	Public Property adminwkst() As System.Nullable(Of Boolean)
		Get
			Return Me._adminwkst
		End Get
		Set
			If (Me._adminwkst.Equals(value) = false) Then
				Me._adminwkst = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_assettag", DbType:="NVarChar(50)")>  _
	Public Property assettag() As String
		Get
			Return Me._assettag
		End Get
		Set
			If (String.Equals(Me._assettag, value) = false) Then
				Me._assettag = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dpi", DbType:="Int")>  _
	Public Property dpi() As System.Nullable(Of Integer)
		Get
			Return Me._dpi
		End Get
		Set
			If (Me._dpi.Equals(value) = false) Then
				Me._dpi = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_farbe", DbType:="Bit")>  _
	Public Property farbe() As System.Nullable(Of Boolean)
		Get
			Return Me._farbe
		End Get
		Set
			If (Me._farbe.Equals(value) = false) Then
				Me._farbe = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_optionen", DbType:="NVarChar(100)")>  _
	Public Property optionen() As String
		Get
			Return Me._optionen
		End Get
		Set
			If (String.Equals(Me._optionen, value) = false) Then
				Me._optionen = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_duplex", DbType:="Bit")>  _
	Public Property duplex() As System.Nullable(Of Boolean)
		Get
			Return Me._duplex
		End Get
		Set
			If (Me._duplex.Equals(value) = false) Then
				Me._duplex = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_comment", DbType:="NVarChar(250)")>  _
	Public Property comment() As String
		Get
			Return Me._comment
		End Get
		Set
			If (String.Equals(Me._comment, value) = false) Then
				Me._comment = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Besitzer")>  _
Partial Public Class Besitzer
	
	Private _id As Integer
	
	Private _Bezeichnung As String
	
	Private _Kommentar As String
	
	Private _Email_ITManager As String
	
	Private _VisumFinanz As System.Nullable(Of Boolean)
	
	Private _Abschreibungsdauer As System.Nullable(Of Integer)
	
	Private _Email_Finanz As String
	
	Private _Anlagebuchhaltung As System.Nullable(Of Boolean)
	
	Private _BenachrichtigungAnlBuchh As System.Nullable(Of Boolean)
	
	Private _Email_AnlBuchh As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id", DbType:="Int NOT NULL")>  _
	Public Property id() As Integer
		Get
			Return Me._id
		End Get
		Set
			If ((Me._id = value)  _
						= false) Then
				Me._id = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Bezeichnung", DbType:="NVarChar(64) NOT NULL", CanBeNull:=false)>  _
	Public Property Bezeichnung() As String
		Get
			Return Me._Bezeichnung
		End Get
		Set
			If (String.Equals(Me._Bezeichnung, value) = false) Then
				Me._Bezeichnung = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Kommentar", DbType:="NVarChar(100)")>  _
	Public Property Kommentar() As String
		Get
			Return Me._Kommentar
		End Get
		Set
			If (String.Equals(Me._Kommentar, value) = false) Then
				Me._Kommentar = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Email_ITManager", DbType:="NVarChar(100)")>  _
	Public Property Email_ITManager() As String
		Get
			Return Me._Email_ITManager
		End Get
		Set
			If (String.Equals(Me._Email_ITManager, value) = false) Then
				Me._Email_ITManager = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VisumFinanz", DbType:="Bit")>  _
	Public Property VisumFinanz() As System.Nullable(Of Boolean)
		Get
			Return Me._VisumFinanz
		End Get
		Set
			If (Me._VisumFinanz.Equals(value) = false) Then
				Me._VisumFinanz = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Abschreibungsdauer", DbType:="Int")>  _
	Public Property Abschreibungsdauer() As System.Nullable(Of Integer)
		Get
			Return Me._Abschreibungsdauer
		End Get
		Set
			If (Me._Abschreibungsdauer.Equals(value) = false) Then
				Me._Abschreibungsdauer = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Email_Finanz", DbType:="NVarChar(100)")>  _
	Public Property Email_Finanz() As String
		Get
			Return Me._Email_Finanz
		End Get
		Set
			If (String.Equals(Me._Email_Finanz, value) = false) Then
				Me._Email_Finanz = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Anlagebuchhaltung", DbType:="Bit")>  _
	Public Property Anlagebuchhaltung() As System.Nullable(Of Boolean)
		Get
			Return Me._Anlagebuchhaltung
		End Get
		Set
			If (Me._Anlagebuchhaltung.Equals(value) = false) Then
				Me._Anlagebuchhaltung = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BenachrichtigungAnlBuchh", DbType:="Bit")>  _
	Public Property BenachrichtigungAnlBuchh() As System.Nullable(Of Boolean)
		Get
			Return Me._BenachrichtigungAnlBuchh
		End Get
		Set
			If (Me._BenachrichtigungAnlBuchh.Equals(value) = false) Then
				Me._BenachrichtigungAnlBuchh = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Email_AnlBuchh", DbType:="NVarChar(100)")>  _
	Public Property Email_AnlBuchh() As String
		Get
			Return Me._Email_AnlBuchh
		End Get
		Set
			If (String.Equals(Me._Email_AnlBuchh, value) = false) Then
				Me._Email_AnlBuchh = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Kategorie")>  _
Partial Public Class Kategorie
	
	Private _ID As Integer
	
	Private _Bezeichnung As String
	
	Private _Typ As System.Nullable(Of Char)
	
	Private _AnlageBuchhaltung As System.Nullable(Of Boolean)
	
	Private _LANDaten As System.Nullable(Of Boolean)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.Always, DbType:="Int NOT NULL IDENTITY", IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me._ID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Bezeichnung", DbType:="NVarChar(64)")>  _
	Public Property Bezeichnung() As String
		Get
			Return Me._Bezeichnung
		End Get
		Set
			If (String.Equals(Me._Bezeichnung, value) = false) Then
				Me._Bezeichnung = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Typ", DbType:="NVarChar(1)")>  _
	Public Property Typ() As System.Nullable(Of Char)
		Get
			Return Me._Typ
		End Get
		Set
			If (Me._Typ.Equals(value) = false) Then
				Me._Typ = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AnlageBuchhaltung", DbType:="Bit")>  _
	Public Property AnlageBuchhaltung() As System.Nullable(Of Boolean)
		Get
			Return Me._AnlageBuchhaltung
		End Get
		Set
			If (Me._AnlageBuchhaltung.Equals(value) = false) Then
				Me._AnlageBuchhaltung = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LANDaten", DbType:="Bit")>  _
	Public Property LANDaten() As System.Nullable(Of Boolean)
		Get
			Return Me._LANDaten
		End Get
		Set
			If (Me._LANDaten.Equals(value) = false) Then
				Me._LANDaten = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MobilData")>  _
Partial Public Class MobilData
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _TelefonNummer As String
	
	Private _KurzNummer As String
	
	Private _Einsatzzweck As System.Nullable(Of Integer)
	
	Private _MobilAbo As System.Nullable(Of Integer)
	
	Private _Kaufdatum As System.Nullable(Of Date)
	
	Private _Preis As System.Nullable(Of Decimal)
	
	Private _RechnungSwisscom As System.Nullable(Of Boolean)
	
	Private _PIN As String
	
	Private _PUK As String
	
	Private _Sicherheitscode As String
	
	Private _Bemerkungen As String
	
	Private _OriginalEditor As String
	
	Private _LastEditor As String
	
	Private _LastChange As System.Nullable(Of Date)
	
	Private _Januar As System.Nullable(Of Decimal)
	
	Private _Februar As System.Nullable(Of Decimal)
	
	Private _Maerz As System.Nullable(Of Decimal)
	
	Private _April As System.Nullable(Of Decimal)
	
	Private _Mai As System.Nullable(Of Decimal)
	
	Private _Juni As System.Nullable(Of Decimal)
	
	Private _Juli As System.Nullable(Of Decimal)
	
	Private _August As System.Nullable(Of Decimal)
	
	Private _September As System.Nullable(Of Decimal)
	
	Private _Oktober As System.Nullable(Of Decimal)
	
	Private _November As System.Nullable(Of Decimal)
	
	Private _Dezember As System.Nullable(Of Decimal)
	
	Private _Geraets As EntitySet(Of Geraet)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnTelefonNummerChanging(value As String)
    End Sub
    Partial Private Sub OnTelefonNummerChanged()
    End Sub
    Partial Private Sub OnKurzNummerChanging(value As String)
    End Sub
    Partial Private Sub OnKurzNummerChanged()
    End Sub
    Partial Private Sub OnEinsatzzweckChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnEinsatzzweckChanged()
    End Sub
    Partial Private Sub OnMobilAboChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMobilAboChanged()
    End Sub
    Partial Private Sub OnKaufdatumChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnKaufdatumChanged()
    End Sub
    Partial Private Sub OnPreisChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnPreisChanged()
    End Sub
    Partial Private Sub OnRechnungSwisscomChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnRechnungSwisscomChanged()
    End Sub
    Partial Private Sub OnPINChanging(value As String)
    End Sub
    Partial Private Sub OnPINChanged()
    End Sub
    Partial Private Sub OnPUKChanging(value As String)
    End Sub
    Partial Private Sub OnPUKChanged()
    End Sub
    Partial Private Sub OnSicherheitscodeChanging(value As String)
    End Sub
    Partial Private Sub OnSicherheitscodeChanged()
    End Sub
    Partial Private Sub OnBemerkungenChanging(value As String)
    End Sub
    Partial Private Sub OnBemerkungenChanged()
    End Sub
    Partial Private Sub OnOriginalEditorChanging(value As String)
    End Sub
    Partial Private Sub OnOriginalEditorChanged()
    End Sub
    Partial Private Sub OnLastEditorChanging(value As String)
    End Sub
    Partial Private Sub OnLastEditorChanged()
    End Sub
    Partial Private Sub OnLastChangeChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnLastChangeChanged()
    End Sub
    Partial Private Sub OnJanuarChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnJanuarChanged()
    End Sub
    Partial Private Sub OnFebruarChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnFebruarChanged()
    End Sub
    Partial Private Sub OnMaerzChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnMaerzChanged()
    End Sub
    Partial Private Sub OnAprilChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnAprilChanged()
    End Sub
    Partial Private Sub OnMaiChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnMaiChanged()
    End Sub
    Partial Private Sub OnJuniChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnJuniChanged()
    End Sub
    Partial Private Sub OnJuliChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnJuliChanged()
    End Sub
    Partial Private Sub OnAugustChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnAugustChanged()
    End Sub
    Partial Private Sub OnSeptemberChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnSeptemberChanged()
    End Sub
    Partial Private Sub OnOktoberChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnOktoberChanged()
    End Sub
    Partial Private Sub OnNovemberChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnNovemberChanged()
    End Sub
    Partial Private Sub OnDezemberChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnDezemberChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._Geraets = New EntitySet(Of Geraet)(AddressOf Me.attach_Geraets, AddressOf Me.detach_Geraets)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TelefonNummer", DbType:="NVarChar(32)")>  _
	Public Property TelefonNummer() As String
		Get
			Return Me._TelefonNummer
		End Get
		Set
			If (String.Equals(Me._TelefonNummer, value) = false) Then
				Me.OnTelefonNummerChanging(value)
				Me.SendPropertyChanging
				Me._TelefonNummer = value
				Me.SendPropertyChanged("TelefonNummer")
				Me.OnTelefonNummerChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_KurzNummer", DbType:="NVarChar(16)")>  _
	Public Property KurzNummer() As String
		Get
			Return Me._KurzNummer
		End Get
		Set
			If (String.Equals(Me._KurzNummer, value) = false) Then
				Me.OnKurzNummerChanging(value)
				Me.SendPropertyChanging
				Me._KurzNummer = value
				Me.SendPropertyChanged("KurzNummer")
				Me.OnKurzNummerChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Einsatzzweck", DbType:="Int")>  _
	Public Property Einsatzzweck() As System.Nullable(Of Integer)
		Get
			Return Me._Einsatzzweck
		End Get
		Set
			If (Me._Einsatzzweck.Equals(value) = false) Then
				Me.OnEinsatzzweckChanging(value)
				Me.SendPropertyChanging
				Me._Einsatzzweck = value
				Me.SendPropertyChanged("Einsatzzweck")
				Me.OnEinsatzzweckChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MobilAbo", DbType:="Int")>  _
	Public Property MobilAbo() As System.Nullable(Of Integer)
		Get
			Return Me._MobilAbo
		End Get
		Set
			If (Me._MobilAbo.Equals(value) = false) Then
				Me.OnMobilAboChanging(value)
				Me.SendPropertyChanging
				Me._MobilAbo = value
				Me.SendPropertyChanged("MobilAbo")
				Me.OnMobilAboChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Kaufdatum", DbType:="DateTime")>  _
	Public Property Kaufdatum() As System.Nullable(Of Date)
		Get
			Return Me._Kaufdatum
		End Get
		Set
			If (Me._Kaufdatum.Equals(value) = false) Then
				Me.OnKaufdatumChanging(value)
				Me.SendPropertyChanging
				Me._Kaufdatum = value
				Me.SendPropertyChanged("Kaufdatum")
				Me.OnKaufdatumChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Preis", DbType:="Decimal(18,2)")>  _
	Public Property Preis() As System.Nullable(Of Decimal)
		Get
			Return Me._Preis
		End Get
		Set
			If (Me._Preis.Equals(value) = false) Then
				Me.OnPreisChanging(value)
				Me.SendPropertyChanging
				Me._Preis = value
				Me.SendPropertyChanged("Preis")
				Me.OnPreisChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RechnungSwisscom", DbType:="Bit")>  _
	Public Property RechnungSwisscom() As System.Nullable(Of Boolean)
		Get
			Return Me._RechnungSwisscom
		End Get
		Set
			If (Me._RechnungSwisscom.Equals(value) = false) Then
				Me.OnRechnungSwisscomChanging(value)
				Me.SendPropertyChanging
				Me._RechnungSwisscom = value
				Me.SendPropertyChanged("RechnungSwisscom")
				Me.OnRechnungSwisscomChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIN", DbType:="NVarChar(16)")>  _
	Public Property PIN() As String
		Get
			Return Me._PIN
		End Get
		Set
			If (String.Equals(Me._PIN, value) = false) Then
				Me.OnPINChanging(value)
				Me.SendPropertyChanging
				Me._PIN = value
				Me.SendPropertyChanged("PIN")
				Me.OnPINChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PUK", DbType:="NVarChar(16)")>  _
	Public Property PUK() As String
		Get
			Return Me._PUK
		End Get
		Set
			If (String.Equals(Me._PUK, value) = false) Then
				Me.OnPUKChanging(value)
				Me.SendPropertyChanging
				Me._PUK = value
				Me.SendPropertyChanged("PUK")
				Me.OnPUKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Sicherheitscode", DbType:="NVarChar(16)")>  _
	Public Property Sicherheitscode() As String
		Get
			Return Me._Sicherheitscode
		End Get
		Set
			If (String.Equals(Me._Sicherheitscode, value) = false) Then
				Me.OnSicherheitscodeChanging(value)
				Me.SendPropertyChanging
				Me._Sicherheitscode = value
				Me.SendPropertyChanged("Sicherheitscode")
				Me.OnSicherheitscodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Bemerkungen", DbType:="NVarChar(800)")>  _
	Public Property Bemerkungen() As String
		Get
			Return Me._Bemerkungen
		End Get
		Set
			If (String.Equals(Me._Bemerkungen, value) = false) Then
				Me.OnBemerkungenChanging(value)
				Me.SendPropertyChanging
				Me._Bemerkungen = value
				Me.SendPropertyChanged("Bemerkungen")
				Me.OnBemerkungenChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OriginalEditor", DbType:="NVarChar(64)")>  _
	Public Property OriginalEditor() As String
		Get
			Return Me._OriginalEditor
		End Get
		Set
			If (String.Equals(Me._OriginalEditor, value) = false) Then
				Me.OnOriginalEditorChanging(value)
				Me.SendPropertyChanging
				Me._OriginalEditor = value
				Me.SendPropertyChanged("OriginalEditor")
				Me.OnOriginalEditorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LastEditor", DbType:="NVarChar(64)")>  _
	Public Property LastEditor() As String
		Get
			Return Me._LastEditor
		End Get
		Set
			If (String.Equals(Me._LastEditor, value) = false) Then
				Me.OnLastEditorChanging(value)
				Me.SendPropertyChanging
				Me._LastEditor = value
				Me.SendPropertyChanged("LastEditor")
				Me.OnLastEditorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LastChange", DbType:="DateTime")>  _
	Public Property LastChange() As System.Nullable(Of Date)
		Get
			Return Me._LastChange
		End Get
		Set
			If (Me._LastChange.Equals(value) = false) Then
				Me.OnLastChangeChanging(value)
				Me.SendPropertyChanging
				Me._LastChange = value
				Me.SendPropertyChanged("LastChange")
				Me.OnLastChangeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Januar", DbType:="Money")>  _
	Public Property Januar() As System.Nullable(Of Decimal)
		Get
			Return Me._Januar
		End Get
		Set
			If (Me._Januar.Equals(value) = false) Then
				Me.OnJanuarChanging(value)
				Me.SendPropertyChanging
				Me._Januar = value
				Me.SendPropertyChanged("Januar")
				Me.OnJanuarChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Februar", DbType:="Money")>  _
	Public Property Februar() As System.Nullable(Of Decimal)
		Get
			Return Me._Februar
		End Get
		Set
			If (Me._Februar.Equals(value) = false) Then
				Me.OnFebruarChanging(value)
				Me.SendPropertyChanging
				Me._Februar = value
				Me.SendPropertyChanged("Februar")
				Me.OnFebruarChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Maerz", DbType:="Money")>  _
	Public Property Maerz() As System.Nullable(Of Decimal)
		Get
			Return Me._Maerz
		End Get
		Set
			If (Me._Maerz.Equals(value) = false) Then
				Me.OnMaerzChanging(value)
				Me.SendPropertyChanging
				Me._Maerz = value
				Me.SendPropertyChanged("Maerz")
				Me.OnMaerzChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_April", DbType:="Money")>  _
	Public Property April() As System.Nullable(Of Decimal)
		Get
			Return Me._April
		End Get
		Set
			If (Me._April.Equals(value) = false) Then
				Me.OnAprilChanging(value)
				Me.SendPropertyChanging
				Me._April = value
				Me.SendPropertyChanged("April")
				Me.OnAprilChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Mai", DbType:="Money")>  _
	Public Property Mai() As System.Nullable(Of Decimal)
		Get
			Return Me._Mai
		End Get
		Set
			If (Me._Mai.Equals(value) = false) Then
				Me.OnMaiChanging(value)
				Me.SendPropertyChanging
				Me._Mai = value
				Me.SendPropertyChanged("Mai")
				Me.OnMaiChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Juni", DbType:="Money")>  _
	Public Property Juni() As System.Nullable(Of Decimal)
		Get
			Return Me._Juni
		End Get
		Set
			If (Me._Juni.Equals(value) = false) Then
				Me.OnJuniChanging(value)
				Me.SendPropertyChanging
				Me._Juni = value
				Me.SendPropertyChanged("Juni")
				Me.OnJuniChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Juli", DbType:="Money")>  _
	Public Property Juli() As System.Nullable(Of Decimal)
		Get
			Return Me._Juli
		End Get
		Set
			If (Me._Juli.Equals(value) = false) Then
				Me.OnJuliChanging(value)
				Me.SendPropertyChanging
				Me._Juli = value
				Me.SendPropertyChanged("Juli")
				Me.OnJuliChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_August", DbType:="Money")>  _
	Public Property August() As System.Nullable(Of Decimal)
		Get
			Return Me._August
		End Get
		Set
			If (Me._August.Equals(value) = false) Then
				Me.OnAugustChanging(value)
				Me.SendPropertyChanging
				Me._August = value
				Me.SendPropertyChanged("August")
				Me.OnAugustChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_September", DbType:="Money")>  _
	Public Property September() As System.Nullable(Of Decimal)
		Get
			Return Me._September
		End Get
		Set
			If (Me._September.Equals(value) = false) Then
				Me.OnSeptemberChanging(value)
				Me.SendPropertyChanging
				Me._September = value
				Me.SendPropertyChanged("September")
				Me.OnSeptemberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Oktober", DbType:="Money")>  _
	Public Property Oktober() As System.Nullable(Of Decimal)
		Get
			Return Me._Oktober
		End Get
		Set
			If (Me._Oktober.Equals(value) = false) Then
				Me.OnOktoberChanging(value)
				Me.SendPropertyChanging
				Me._Oktober = value
				Me.SendPropertyChanged("Oktober")
				Me.OnOktoberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_November", DbType:="Money")>  _
	Public Property November() As System.Nullable(Of Decimal)
		Get
			Return Me._November
		End Get
		Set
			If (Me._November.Equals(value) = false) Then
				Me.OnNovemberChanging(value)
				Me.SendPropertyChanging
				Me._November = value
				Me.SendPropertyChanged("November")
				Me.OnNovemberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Dezember", DbType:="Money")>  _
	Public Property Dezember() As System.Nullable(Of Decimal)
		Get
			Return Me._Dezember
		End Get
		Set
			If (Me._Dezember.Equals(value) = false) Then
				Me.OnDezemberChanging(value)
				Me.SendPropertyChanging
				Me._Dezember = value
				Me.SendPropertyChanged("Dezember")
				Me.OnDezemberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="MobilData_Geraet", Storage:="_Geraets", ThisKey:="ID", OtherKey:="MobilDataID")>  _
	Public Property Geraets() As EntitySet(Of Geraet)
		Get
			Return Me._Geraets
		End Get
		Set
			Me._Geraets.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_Geraets(ByVal entity As Geraet)
		Me.SendPropertyChanging
		entity.MobilData = Me
	End Sub
	
	Private Sub detach_Geraets(ByVal entity As Geraet)
		Me.SendPropertyChanging
		entity.MobilData = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Benutzer")>  _
Partial Public Class Benutzer
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _PersNr As Long
	
	Private _Name As String
	
	Private _Vorname As String
	
	Private _Firma As String
	
	Private _Buero As String
	
	Private _Abteilung As String
	
	Private _Kostenstelle As String
	
	Private _Telefon As String
	
	Private _Shortname As String
	
	Private _Position As String
	
	Private _PersArea As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnPersNrChanging(value As Long)
    End Sub
    Partial Private Sub OnPersNrChanged()
    End Sub
    Partial Private Sub OnNameChanging(value As String)
    End Sub
    Partial Private Sub OnNameChanged()
    End Sub
    Partial Private Sub OnVornameChanging(value As String)
    End Sub
    Partial Private Sub OnVornameChanged()
    End Sub
    Partial Private Sub OnFirmaChanging(value As String)
    End Sub
    Partial Private Sub OnFirmaChanged()
    End Sub
    Partial Private Sub OnBueroChanging(value As String)
    End Sub
    Partial Private Sub OnBueroChanged()
    End Sub
    Partial Private Sub OnAbteilungChanging(value As String)
    End Sub
    Partial Private Sub OnAbteilungChanged()
    End Sub
    Partial Private Sub OnKostenstelleChanging(value As String)
    End Sub
    Partial Private Sub OnKostenstelleChanged()
    End Sub
    Partial Private Sub OnTelefonChanging(value As String)
    End Sub
    Partial Private Sub OnTelefonChanged()
    End Sub
    Partial Private Sub OnShortnameChanging(value As String)
    End Sub
    Partial Private Sub OnShortnameChanged()
    End Sub
    Partial Private Sub OnPositionChanging(value As String)
    End Sub
    Partial Private Sub OnPositionChanged()
    End Sub
    Partial Private Sub OnPersAreaChanging(value As String)
    End Sub
    Partial Private Sub OnPersAreaChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PersNr", DbType:="BigInt NOT NULL", IsPrimaryKey:=true)>  _
	Public Property PersNr() As Long
		Get
			Return Me._PersNr
		End Get
		Set
			If ((Me._PersNr = value)  _
						= false) Then
				Me.OnPersNrChanging(value)
				Me.SendPropertyChanging
				Me._PersNr = value
				Me.SendPropertyChanged("PersNr")
				Me.OnPersNrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="NVarChar(64)")>  _
	Public Property Name() As String
		Get
			Return Me._Name
		End Get
		Set
			If (String.Equals(Me._Name, value) = false) Then
				Me.OnNameChanging(value)
				Me.SendPropertyChanging
				Me._Name = value
				Me.SendPropertyChanged("Name")
				Me.OnNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Vorname", DbType:="NVarChar(64)")>  _
	Public Property Vorname() As String
		Get
			Return Me._Vorname
		End Get
		Set
			If (String.Equals(Me._Vorname, value) = false) Then
				Me.OnVornameChanging(value)
				Me.SendPropertyChanging
				Me._Vorname = value
				Me.SendPropertyChanged("Vorname")
				Me.OnVornameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Firma", DbType:="NVarChar(8)")>  _
	Public Property Firma() As String
		Get
			Return Me._Firma
		End Get
		Set
			If (String.Equals(Me._Firma, value) = false) Then
				Me.OnFirmaChanging(value)
				Me.SendPropertyChanging
				Me._Firma = value
				Me.SendPropertyChanged("Firma")
				Me.OnFirmaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Buero", DbType:="NVarChar(64)")>  _
	Public Property Buero() As String
		Get
			Return Me._Buero
		End Get
		Set
			If (String.Equals(Me._Buero, value) = false) Then
				Me.OnBueroChanging(value)
				Me.SendPropertyChanging
				Me._Buero = value
				Me.SendPropertyChanged("Buero")
				Me.OnBueroChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Abteilung", DbType:="NVarChar(32)")>  _
	Public Property Abteilung() As String
		Get
			Return Me._Abteilung
		End Get
		Set
			If (String.Equals(Me._Abteilung, value) = false) Then
				Me.OnAbteilungChanging(value)
				Me.SendPropertyChanging
				Me._Abteilung = value
				Me.SendPropertyChanged("Abteilung")
				Me.OnAbteilungChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Kostenstelle", DbType:="NVarChar(64)")>  _
	Public Property Kostenstelle() As String
		Get
			Return Me._Kostenstelle
		End Get
		Set
			If (String.Equals(Me._Kostenstelle, value) = false) Then
				Me.OnKostenstelleChanging(value)
				Me.SendPropertyChanging
				Me._Kostenstelle = value
				Me.SendPropertyChanged("Kostenstelle")
				Me.OnKostenstelleChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Telefon", DbType:="NVarChar(32)")>  _
	Public Property Telefon() As String
		Get
			Return Me._Telefon
		End Get
		Set
			If (String.Equals(Me._Telefon, value) = false) Then
				Me.OnTelefonChanging(value)
				Me.SendPropertyChanging
				Me._Telefon = value
				Me.SendPropertyChanged("Telefon")
				Me.OnTelefonChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Shortname", DbType:="NVarChar(16)")>  _
	Public Property Shortname() As String
		Get
			Return Me._Shortname
		End Get
		Set
			If (String.Equals(Me._Shortname, value) = false) Then
				Me.OnShortnameChanging(value)
				Me.SendPropertyChanging
				Me._Shortname = value
				Me.SendPropertyChanged("Shortname")
				Me.OnShortnameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Position", DbType:="NVarChar(50)")>  _
	Public Property Position() As String
		Get
			Return Me._Position
		End Get
		Set
			If (String.Equals(Me._Position, value) = false) Then
				Me.OnPositionChanging(value)
				Me.SendPropertyChanging
				Me._Position = value
				Me.SendPropertyChanged("Position")
				Me.OnPositionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PersArea", DbType:="NVarChar(50)")>  _
	Public Property PersArea() As String
		Get
			Return Me._PersArea
		End Get
		Set
			If (String.Equals(Me._PersArea, value) = false) Then
				Me.OnPersAreaChanging(value)
				Me.SendPropertyChanging
				Me._PersArea = value
				Me.SendPropertyChanged("PersArea")
				Me.OnPersAreaChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Geraete_Daten")>  _
Partial Public Class Geraet
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _CH_Nr As System.Nullable(Of Integer)
	
	Private _ID As Integer
	
	Private _Best_Nr As String
	
	Private _Geraet As String
	
	Private _Typ_Nr As String
	
	Private _Serie_Nr As String
	
	Private _Hersteller As String
	
	Private _Lieferant As String
	
	Private _Besitzer As String
	
	Private _Kauf_Date As System.Nullable(Of Date)
	
	Private _Garantiezeit As System.Nullable(Of Short)
	
	Private _Garantietyp As String
	
	Private _CPU_Typ As String
	
	Private _CPU_Frequenz As System.Nullable(Of Short)
	
	Private _Memory As System.Nullable(Of Integer)
	
	Private _HD_Disk As System.Nullable(Of Double)
	
	Private _Graphikkarte As String
	
	Private _Resolution As String
	
	Private _Soundkarte As String
	
	Private _Netzkarte As String
	
	Private _Betriebssystem As System.Nullable(Of Integer)
	
	Private _MAC_Adresse As String
	
	Private _HostName As String
	
	Private _IP_Adresse As String
	
	Private _Subnet_Maske As String
	
	Private _Kategorie As String
	
	Private _MobilDataID As System.Nullable(Of Integer)
	
	Private _Umsteller As String
	
	Private _Umstelldatum As System.Nullable(Of Date)
	
	Private _Status As System.Nullable(Of Integer)
	
	Private _Status_Date As System.Nullable(Of Date)
	
	Private _LastUser As String
	
	Private _BemerkungAllgemein As String
	
	Private _AdminWkst As System.Nullable(Of Boolean)
	
	Private _AnmAdminWkst As String
	
	Private _AnlBuchnr As System.Nullable(Of Integer)
	
	Private _Lagerplatz As String
	
	Private _Assettag As String
	
	Private _MobilData As EntityRef(Of MobilData)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCH_NrChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCH_NrChanged()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnBest_NrChanging(value As String)
    End Sub
    Partial Private Sub OnBest_NrChanged()
    End Sub
    Partial Private Sub OnGeraetChanging(value As String)
    End Sub
    Partial Private Sub OnGeraetChanged()
    End Sub
    Partial Private Sub OnTyp_NrChanging(value As String)
    End Sub
    Partial Private Sub OnTyp_NrChanged()
    End Sub
    Partial Private Sub OnSerie_NrChanging(value As String)
    End Sub
    Partial Private Sub OnSerie_NrChanged()
    End Sub
    Partial Private Sub OnHerstellerChanging(value As String)
    End Sub
    Partial Private Sub OnHerstellerChanged()
    End Sub
    Partial Private Sub OnLieferantChanging(value As String)
    End Sub
    Partial Private Sub OnLieferantChanged()
    End Sub
    Partial Private Sub OnBesitzerChanging(value As String)
    End Sub
    Partial Private Sub OnBesitzerChanged()
    End Sub
    Partial Private Sub OnKauf_DateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnKauf_DateChanged()
    End Sub
    Partial Private Sub OnGarantiezeitChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnGarantiezeitChanged()
    End Sub
    Partial Private Sub OnGarantietypChanging(value As String)
    End Sub
    Partial Private Sub OnGarantietypChanged()
    End Sub
    Partial Private Sub OnCPU_TypChanging(value As String)
    End Sub
    Partial Private Sub OnCPU_TypChanged()
    End Sub
    Partial Private Sub OnCPU_FrequenzChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnCPU_FrequenzChanged()
    End Sub
    Partial Private Sub OnMemoryChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMemoryChanged()
    End Sub
    Partial Private Sub OnHD_DiskChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnHD_DiskChanged()
    End Sub
    Partial Private Sub OnGraphikkarteChanging(value As String)
    End Sub
    Partial Private Sub OnGraphikkarteChanged()
    End Sub
    Partial Private Sub OnResolutionChanging(value As String)
    End Sub
    Partial Private Sub OnResolutionChanged()
    End Sub
    Partial Private Sub OnSoundkarteChanging(value As String)
    End Sub
    Partial Private Sub OnSoundkarteChanged()
    End Sub
    Partial Private Sub OnNetzkarteChanging(value As String)
    End Sub
    Partial Private Sub OnNetzkarteChanged()
    End Sub
    Partial Private Sub OnBetriebssystemChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBetriebssystemChanged()
    End Sub
    Partial Private Sub OnMAC_AdresseChanging(value As String)
    End Sub
    Partial Private Sub OnMAC_AdresseChanged()
    End Sub
    Partial Private Sub OnHostNameChanging(value As String)
    End Sub
    Partial Private Sub OnHostNameChanged()
    End Sub
    Partial Private Sub OnIP_AdresseChanging(value As String)
    End Sub
    Partial Private Sub OnIP_AdresseChanged()
    End Sub
    Partial Private Sub OnSubnet_MaskeChanging(value As String)
    End Sub
    Partial Private Sub OnSubnet_MaskeChanged()
    End Sub
    Partial Private Sub OnKategorieChanging(value As String)
    End Sub
    Partial Private Sub OnKategorieChanged()
    End Sub
    Partial Private Sub OnMobilDataIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMobilDataIDChanged()
    End Sub
    Partial Private Sub OnUmstellerChanging(value As String)
    End Sub
    Partial Private Sub OnUmstellerChanged()
    End Sub
    Partial Private Sub OnUmstelldatumChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUmstelldatumChanged()
    End Sub
    Partial Private Sub OnStatusChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnStatusChanged()
    End Sub
    Partial Private Sub OnStatus_DateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnStatus_DateChanged()
    End Sub
    Partial Private Sub OnLastUserChanging(value As String)
    End Sub
    Partial Private Sub OnLastUserChanged()
    End Sub
    Partial Private Sub OnBemerkungAllgemeinChanging(value As String)
    End Sub
    Partial Private Sub OnBemerkungAllgemeinChanged()
    End Sub
    Partial Private Sub OnAdminWkstChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnAdminWkstChanged()
    End Sub
    Partial Private Sub OnAnmAdminWkstChanging(value As String)
    End Sub
    Partial Private Sub OnAnmAdminWkstChanged()
    End Sub
    Partial Private Sub OnAnlBuchnrChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnAnlBuchnrChanged()
    End Sub
    Partial Private Sub OnLagerplatzChanging(value As String)
    End Sub
    Partial Private Sub OnLagerplatzChanged()
    End Sub
    Partial Private Sub OnAssettagChanging(value As String)
    End Sub
    Partial Private Sub OnAssettagChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._MobilData = CType(Nothing, EntityRef(Of MobilData))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CH_Nr", DbType:="Int")>  _
	Public Property CH_Nr() As System.Nullable(Of Integer)
		Get
			Return Me._CH_Nr
		End Get
		Set
			If (Me._CH_Nr.Equals(value) = false) Then
				Me.OnCH_NrChanging(value)
				Me.SendPropertyChanging
				Me._CH_Nr = value
				Me.SendPropertyChanged("CH_Nr")
				Me.OnCH_NrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Best_Nr", DbType:="NVarChar(30)")>  _
	Public Property Best_Nr() As String
		Get
			Return Me._Best_Nr
		End Get
		Set
			If (String.Equals(Me._Best_Nr, value) = false) Then
				Me.OnBest_NrChanging(value)
				Me.SendPropertyChanging
				Me._Best_Nr = value
				Me.SendPropertyChanged("Best_Nr")
				Me.OnBest_NrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Geraet", DbType:="NVarChar(40)")>  _
	Public Property Geraet() As String
		Get
			Return Me._Geraet
		End Get
		Set
			If (String.Equals(Me._Geraet, value) = false) Then
				Me.OnGeraetChanging(value)
				Me.SendPropertyChanging
				Me._Geraet = value
				Me.SendPropertyChanged("Geraet")
				Me.OnGeraetChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Typ_Nr", DbType:="NVarChar(50)")>  _
	Public Property Typ_Nr() As String
		Get
			Return Me._Typ_Nr
		End Get
		Set
			If (String.Equals(Me._Typ_Nr, value) = false) Then
				Me.OnTyp_NrChanging(value)
				Me.SendPropertyChanging
				Me._Typ_Nr = value
				Me.SendPropertyChanged("Typ_Nr")
				Me.OnTyp_NrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Serie_Nr", DbType:="NVarChar(32)")>  _
	Public Property Serie_Nr() As String
		Get
			Return Me._Serie_Nr
		End Get
		Set
			If (String.Equals(Me._Serie_Nr, value) = false) Then
				Me.OnSerie_NrChanging(value)
				Me.SendPropertyChanging
				Me._Serie_Nr = value
				Me.SendPropertyChanged("Serie_Nr")
				Me.OnSerie_NrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Hersteller", DbType:="NVarChar(50)")>  _
	Public Property Hersteller() As String
		Get
			Return Me._Hersteller
		End Get
		Set
			If (String.Equals(Me._Hersteller, value) = false) Then
				Me.OnHerstellerChanging(value)
				Me.SendPropertyChanging
				Me._Hersteller = value
				Me.SendPropertyChanged("Hersteller")
				Me.OnHerstellerChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Lieferant", DbType:="NVarChar(50)")>  _
	Public Property Lieferant() As String
		Get
			Return Me._Lieferant
		End Get
		Set
			If (String.Equals(Me._Lieferant, value) = false) Then
				Me.OnLieferantChanging(value)
				Me.SendPropertyChanging
				Me._Lieferant = value
				Me.SendPropertyChanged("Lieferant")
				Me.OnLieferantChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Besitzer", DbType:="NVarChar(30)")>  _
	Public Property Besitzer() As String
		Get
			Return Me._Besitzer
		End Get
		Set
			If (String.Equals(Me._Besitzer, value) = false) Then
				Me.OnBesitzerChanging(value)
				Me.SendPropertyChanging
				Me._Besitzer = value
				Me.SendPropertyChanged("Besitzer")
				Me.OnBesitzerChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Kauf_Date", DbType:="DateTime")>  _
	Public Property Kauf_Date() As System.Nullable(Of Date)
		Get
			Return Me._Kauf_Date
		End Get
		Set
			If (Me._Kauf_Date.Equals(value) = false) Then
				Me.OnKauf_DateChanging(value)
				Me.SendPropertyChanging
				Me._Kauf_Date = value
				Me.SendPropertyChanged("Kauf_Date")
				Me.OnKauf_DateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Garantiezeit", DbType:="SmallInt")>  _
	Public Property Garantiezeit() As System.Nullable(Of Short)
		Get
			Return Me._Garantiezeit
		End Get
		Set
			If (Me._Garantiezeit.Equals(value) = false) Then
				Me.OnGarantiezeitChanging(value)
				Me.SendPropertyChanging
				Me._Garantiezeit = value
				Me.SendPropertyChanged("Garantiezeit")
				Me.OnGarantiezeitChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Garantietyp", DbType:="NVarChar(15)")>  _
	Public Property Garantietyp() As String
		Get
			Return Me._Garantietyp
		End Get
		Set
			If (String.Equals(Me._Garantietyp, value) = false) Then
				Me.OnGarantietypChanging(value)
				Me.SendPropertyChanging
				Me._Garantietyp = value
				Me.SendPropertyChanged("Garantietyp")
				Me.OnGarantietypChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CPU_Typ", DbType:="NVarChar(30)")>  _
	Public Property CPU_Typ() As String
		Get
			Return Me._CPU_Typ
		End Get
		Set
			If (String.Equals(Me._CPU_Typ, value) = false) Then
				Me.OnCPU_TypChanging(value)
				Me.SendPropertyChanging
				Me._CPU_Typ = value
				Me.SendPropertyChanged("CPU_Typ")
				Me.OnCPU_TypChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CPU_Frequenz", DbType:="SmallInt")>  _
	Public Property CPU_Frequenz() As System.Nullable(Of Short)
		Get
			Return Me._CPU_Frequenz
		End Get
		Set
			If (Me._CPU_Frequenz.Equals(value) = false) Then
				Me.OnCPU_FrequenzChanging(value)
				Me.SendPropertyChanging
				Me._CPU_Frequenz = value
				Me.SendPropertyChanged("CPU_Frequenz")
				Me.OnCPU_FrequenzChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Memory", DbType:="Int")>  _
	Public Property Memory() As System.Nullable(Of Integer)
		Get
			Return Me._Memory
		End Get
		Set
			If (Me._Memory.Equals(value) = false) Then
				Me.OnMemoryChanging(value)
				Me.SendPropertyChanging
				Me._Memory = value
				Me.SendPropertyChanged("Memory")
				Me.OnMemoryChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HD_Disk", DbType:="Float")>  _
	Public Property HD_Disk() As System.Nullable(Of Double)
		Get
			Return Me._HD_Disk
		End Get
		Set
			If (Me._HD_Disk.Equals(value) = false) Then
				Me.OnHD_DiskChanging(value)
				Me.SendPropertyChanging
				Me._HD_Disk = value
				Me.SendPropertyChanged("HD_Disk")
				Me.OnHD_DiskChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Graphikkarte", DbType:="NVarChar(50)")>  _
	Public Property Graphikkarte() As String
		Get
			Return Me._Graphikkarte
		End Get
		Set
			If (String.Equals(Me._Graphikkarte, value) = false) Then
				Me.OnGraphikkarteChanging(value)
				Me.SendPropertyChanging
				Me._Graphikkarte = value
				Me.SendPropertyChanged("Graphikkarte")
				Me.OnGraphikkarteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Resolution", DbType:="NVarChar(30)")>  _
	Public Property Resolution() As String
		Get
			Return Me._Resolution
		End Get
		Set
			If (String.Equals(Me._Resolution, value) = false) Then
				Me.OnResolutionChanging(value)
				Me.SendPropertyChanging
				Me._Resolution = value
				Me.SendPropertyChanged("Resolution")
				Me.OnResolutionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Soundkarte", DbType:="NVarChar(50)")>  _
	Public Property Soundkarte() As String
		Get
			Return Me._Soundkarte
		End Get
		Set
			If (String.Equals(Me._Soundkarte, value) = false) Then
				Me.OnSoundkarteChanging(value)
				Me.SendPropertyChanging
				Me._Soundkarte = value
				Me.SendPropertyChanged("Soundkarte")
				Me.OnSoundkarteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Netzkarte", DbType:="NVarChar(80)")>  _
	Public Property Netzkarte() As String
		Get
			Return Me._Netzkarte
		End Get
		Set
			If (String.Equals(Me._Netzkarte, value) = false) Then
				Me.OnNetzkarteChanging(value)
				Me.SendPropertyChanging
				Me._Netzkarte = value
				Me.SendPropertyChanged("Netzkarte")
				Me.OnNetzkarteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Betriebssystem", DbType:="Int")>  _
	Public Property Betriebssystem() As System.Nullable(Of Integer)
		Get
			Return Me._Betriebssystem
		End Get
		Set
			If (Me._Betriebssystem.Equals(value) = false) Then
				Me.OnBetriebssystemChanging(value)
				Me.SendPropertyChanging
				Me._Betriebssystem = value
				Me.SendPropertyChanged("Betriebssystem")
				Me.OnBetriebssystemChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MAC_Adresse", DbType:="NVarChar(20)")>  _
	Public Property MAC_Adresse() As String
		Get
			Return Me._MAC_Adresse
		End Get
		Set
			If (String.Equals(Me._MAC_Adresse, value) = false) Then
				Me.OnMAC_AdresseChanging(value)
				Me.SendPropertyChanging
				Me._MAC_Adresse = value
				Me.SendPropertyChanged("MAC_Adresse")
				Me.OnMAC_AdresseChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HostName", DbType:="NVarChar(10)")>  _
	Public Property HostName() As String
		Get
			Return Me._HostName
		End Get
		Set
			If (String.Equals(Me._HostName, value) = false) Then
				Me.OnHostNameChanging(value)
				Me.SendPropertyChanging
				Me._HostName = value
				Me.SendPropertyChanged("HostName")
				Me.OnHostNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IP_Adresse", DbType:="NVarChar(15)")>  _
	Public Property IP_Adresse() As String
		Get
			Return Me._IP_Adresse
		End Get
		Set
			If (String.Equals(Me._IP_Adresse, value) = false) Then
				Me.OnIP_AdresseChanging(value)
				Me.SendPropertyChanging
				Me._IP_Adresse = value
				Me.SendPropertyChanged("IP_Adresse")
				Me.OnIP_AdresseChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Subnet_Maske", DbType:="NVarChar(15)")>  _
	Public Property Subnet_Maske() As String
		Get
			Return Me._Subnet_Maske
		End Get
		Set
			If (String.Equals(Me._Subnet_Maske, value) = false) Then
				Me.OnSubnet_MaskeChanging(value)
				Me.SendPropertyChanging
				Me._Subnet_Maske = value
				Me.SendPropertyChanged("Subnet_Maske")
				Me.OnSubnet_MaskeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Kategorie", DbType:="NVarChar(20)")>  _
	Public Property Kategorie() As String
		Get
			Return Me._Kategorie
		End Get
		Set
			If (String.Equals(Me._Kategorie, value) = false) Then
				Me.OnKategorieChanging(value)
				Me.SendPropertyChanging
				Me._Kategorie = value
				Me.SendPropertyChanged("Kategorie")
				Me.OnKategorieChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MobilDataID", DbType:="Int")>  _
	Public Property MobilDataID() As System.Nullable(Of Integer)
		Get
			Return Me._MobilDataID
		End Get
		Set
			If (Me._MobilDataID.Equals(value) = false) Then
				If Me._MobilData.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnMobilDataIDChanging(value)
				Me.SendPropertyChanging
				Me._MobilDataID = value
				Me.SendPropertyChanged("MobilDataID")
				Me.OnMobilDataIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Umsteller", DbType:="NVarChar(50)")>  _
	Public Property Umsteller() As String
		Get
			Return Me._Umsteller
		End Get
		Set
			If (String.Equals(Me._Umsteller, value) = false) Then
				Me.OnUmstellerChanging(value)
				Me.SendPropertyChanging
				Me._Umsteller = value
				Me.SendPropertyChanged("Umsteller")
				Me.OnUmstellerChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Umstelldatum", DbType:="DateTime")>  _
	Public Property Umstelldatum() As System.Nullable(Of Date)
		Get
			Return Me._Umstelldatum
		End Get
		Set
			If (Me._Umstelldatum.Equals(value) = false) Then
				Me.OnUmstelldatumChanging(value)
				Me.SendPropertyChanging
				Me._Umstelldatum = value
				Me.SendPropertyChanged("Umstelldatum")
				Me.OnUmstelldatumChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Status", DbType:="Int")>  _
	Public Property Status() As System.Nullable(Of Integer)
		Get
			Return Me._Status
		End Get
		Set
			If (Me._Status.Equals(value) = false) Then
				Me.OnStatusChanging(value)
				Me.SendPropertyChanging
				Me._Status = value
				Me.SendPropertyChanged("Status")
				Me.OnStatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Status_Date", DbType:="DateTime")>  _
	Public Property Status_Date() As System.Nullable(Of Date)
		Get
			Return Me._Status_Date
		End Get
		Set
			If (Me._Status_Date.Equals(value) = false) Then
				Me.OnStatus_DateChanging(value)
				Me.SendPropertyChanging
				Me._Status_Date = value
				Me.SendPropertyChanged("Status_Date")
				Me.OnStatus_DateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LastUser", DbType:="NVarChar(192)")>  _
	Public Property LastUser() As String
		Get
			Return Me._LastUser
		End Get
		Set
			If (String.Equals(Me._LastUser, value) = false) Then
				Me.OnLastUserChanging(value)
				Me.SendPropertyChanging
				Me._LastUser = value
				Me.SendPropertyChanged("LastUser")
				Me.OnLastUserChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BemerkungAllgemein", DbType:="NVarChar(800)")>  _
	Public Property BemerkungAllgemein() As String
		Get
			Return Me._BemerkungAllgemein
		End Get
		Set
			If (String.Equals(Me._BemerkungAllgemein, value) = false) Then
				Me.OnBemerkungAllgemeinChanging(value)
				Me.SendPropertyChanging
				Me._BemerkungAllgemein = value
				Me.SendPropertyChanged("BemerkungAllgemein")
				Me.OnBemerkungAllgemeinChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdminWkst", DbType:="Bit")>  _
	Public Property AdminWkst() As System.Nullable(Of Boolean)
		Get
			Return Me._AdminWkst
		End Get
		Set
			If (Me._AdminWkst.Equals(value) = false) Then
				Me.OnAdminWkstChanging(value)
				Me.SendPropertyChanging
				Me._AdminWkst = value
				Me.SendPropertyChanged("AdminWkst")
				Me.OnAdminWkstChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AnmAdminWkst", DbType:="NVarChar(50)")>  _
	Public Property AnmAdminWkst() As String
		Get
			Return Me._AnmAdminWkst
		End Get
		Set
			If (String.Equals(Me._AnmAdminWkst, value) = false) Then
				Me.OnAnmAdminWkstChanging(value)
				Me.SendPropertyChanging
				Me._AnmAdminWkst = value
				Me.SendPropertyChanged("AnmAdminWkst")
				Me.OnAnmAdminWkstChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AnlBuchnr", DbType:="Int")>  _
	Public Property AnlBuchnr() As System.Nullable(Of Integer)
		Get
			Return Me._AnlBuchnr
		End Get
		Set
			If (Me._AnlBuchnr.Equals(value) = false) Then
				Me.OnAnlBuchnrChanging(value)
				Me.SendPropertyChanging
				Me._AnlBuchnr = value
				Me.SendPropertyChanged("AnlBuchnr")
				Me.OnAnlBuchnrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Lagerplatz", DbType:="NVarChar(50)")>  _
	Public Property Lagerplatz() As String
		Get
			Return Me._Lagerplatz
		End Get
		Set
			If (String.Equals(Me._Lagerplatz, value) = false) Then
				Me.OnLagerplatzChanging(value)
				Me.SendPropertyChanging
				Me._Lagerplatz = value
				Me.SendPropertyChanged("Lagerplatz")
				Me.OnLagerplatzChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Assettag", DbType:="NVarChar(50)")>  _
	Public Property Assettag() As String
		Get
			Return Me._Assettag
		End Get
		Set
			If (String.Equals(Me._Assettag, value) = false) Then
				Me.OnAssettagChanging(value)
				Me.SendPropertyChanging
				Me._Assettag = value
				Me.SendPropertyChanged("Assettag")
				Me.OnAssettagChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="MobilData_Geraet", Storage:="_MobilData", ThisKey:="MobilDataID", OtherKey:="ID", IsForeignKey:=true)>  _
	Public Property MobilData() As MobilData
		Get
			Return Me._MobilData.Entity
		End Get
		Set
			Dim previousValue As MobilData = Me._MobilData.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._MobilData.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._MobilData.Entity = Nothing
					previousValue.Geraets.Remove(Me)
				End If
				Me._MobilData.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.Geraets.Add(Me)
					Me._MobilDataID = value.ID
				Else
					Me._MobilDataID = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("MobilData")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
